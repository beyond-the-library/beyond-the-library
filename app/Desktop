// Name: Aljaed Lui Ereno
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <pthread.h>

#define N 32 

struct data {
	int m;
	int n;
   pthread_t tid;
   pthread_attr_t attr;
};

int a[N];     /* Array to add */

void genvalues(int n); /* Initializes  a[] */
void prnvalues(int n); /* Prints a[] */
void sum_array(int n); /* Displays the sum of the array */
void * addarray(struct data * p); 

struct data threadinfo[N];

void main() 
{
genvalues(N);    /* Initialize a[] with random values */
printf("Initial values:\n");
prnvalues(N);    /* Display the values */
sum_array(N);    /* Display the sum value */


for (int size=1; size<N; size=2*size) {
   int numthread = 0;
   printf("*** adding a[i+%d] to a[i]\n",size);
   for (int i=0; i+size<N; i+=2*size) {
	   threadinfo[numthread].m = i;
	   threadinfo[numthread].n = i+size;
      pthread_attr_init(&(threadinfo[numthread].attr));
      pthread_create(&(threadinfo[numthread].tid), &(threadinfo[numthread].attr), addarray(&(threadinfo[numthread])), (void*) (&(threadinfo[numthread])));
	   // addarray(&p);
      numthread++;
   }
   for(int j = 0; j < numthread; j++){
      pthread_join(threadinfo[j].tid, NULL);
   }
}

printf("\nOutput:\n");
prnvalues(N); /* Display the sorted values */

}

void * addarray(struct data * p)
{
usleep(250000);
a[p->m] += a[p->n];
}

/* Initializes array a[] with random values. */
void genvalues(int n)
{
int k = 2*n;
int current = 0;
for (int i=0; i<n; i++) {
   current = (current*73 + 19)%k;
   a[i] = current;
}
}

/* Prints the values in the array a[] */
void prnvalues(int n)
{
for (int i=0; i<n; i++) {
   printf(" %d ", a[i]);
   if ((i+1)%10 == 0) printf("\n");
}
printf("\n");
}

/* Ssum the array */
void sum_array(int n)
{
int sum = 0;
for (int i=0; i<n; i++) {
    sum += a[i];
}
printf("Sum of the array =%d\n", sum);
}

